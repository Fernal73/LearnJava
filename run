#! /usr/bin/env bash

######################################################################
# @author      : Linus Fernandes (linusfernandes@gmail.com)
# @file        : run
# @created     : Thursday May 02, 2019 16:31:33 IST
# @copyright   : Copyright (c) Linus Fernandes
# @description : 
######################################################################

usage ()
{
  echo 'Usage: run <dir> <class>'
  echo 'dir - project directory. Must exist'
  echo 'class - full name including package name of the main class. Overrides contents of .main under project directory.'
  exit 1
}

setUp ()
{
	cd $proj || \
    { echo "Unable to access folder $proj";exit 1;}
	[ -e $setupScript ] && \
    { ./$setupScript || \
      { \
        echo "Error running setup script";\
        exit 1;\
      }\
    }
	cd ..
}

tearDown ()
{
	cd $proj || \
    { echo "Unable to access folder $proj";exit 1;}
	[ -e $teardownScript ] && \
    {\
      ./$teardownScript || \
      {\
        echo "Error running teardown script";\
        exit 1;\
      }\
    }
	cd ..
}
isDalvik ()
{
  type dalvikvm &>/dev/null
  return $?
}
isJVM ()
{
  type java &>/dev/null
  return $?
}
runDalvik()
{
  dexFile=$proj-$version.dex
  if [ -e $dexFile ] 
    then
    setUp
    echo "Main class(es): $main"
    echo
    echo "$main" | while read -r a; do 
      echo "Running $a...";echo
      dalvikvm -cp $dexFile $a;
      echo
    done
    tearDown;
    exit 0;
  else
    echo $dexFile does not exist. Run build or buildall.
    exit 1
  fi
}
runJVM()
{
  jarFile="$proj-$version.jar"
  if [ -e $jarFile ]
    then
      setUp
      echo Main class: $main
    echo "$main" | while read -r a; do 
      echo "Running $a...";echo
      java -cp $jarFile:$proj $a 
    done
      tearDown;
      exit 0;
    else
      echo $jarFile does not exist. Run buildj or buildjall.
    exit 1
  fi
}

readVersion()
{
  [ -e $versionFile ] && \
      { version=$(cat $versionFile) || \
      echo "Unable to read $versionFile";}
}

setupScript="setup"
teardownScript="teardown"
nomainFile=".nomain"
mainFile=".main"
proj=$1
if [ -z $proj ]
  then
    usage
fi
if [ -e $proj/$nomainFile ]
  then
    echo $proj
    echo "Not an executable project."
    exit 1
fi

versionFile=".version"
version="0.0.0"
main=$2
if [ -z $main ]
then
  main=$(cat $proj/$mainFile) || \
    { echo "Error reading $proj/$mainFile";usage; }
fi
echo $proj
readVersion
isDalvik
dalvik=$?
if [ $dalvik -eq 0 ]
  then
    runDalvik
fi

isJVM
jvm=$?
if [ $jvm -eq 0 ]
  then
    runJVM
fi

usage
