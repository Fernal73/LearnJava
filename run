#! /usr/bin/env bash

######################################################################
# @author      : Linus Fernandes (linusfernandes@gmail.com)
# @file        : run
# @created     : Thursday May 02, 2019 16:31:33 IST
# @copyright   : Copyright (c) Linus Fernandes
# @description : 
######################################################################

usage ()
{
  echo 'Usage: run <dir> <class>'
  echo 'dir - project directory. Must exist'
  echo 'class - full name including package name of the main class. Overrides contents of .main under project directory.'
  exit 1
}

setUp ()
{
	cd $proj || \
    { echo "Unable to access folder $proj";exit 1;}
	[ -e setup ] && \
    { ./setup || \
      { \
        echo "Error running setup script";\
        exit 1;\
      }\
    }
	cd ..
}

tearDown ()
{
	cd $proj || \
    { echo "Unable to access folder $proj";exit 1;}
	[ -e teardown ] && \
    {\
      ./teardown || \
      {\
        echo "Error running teardown script";\
        exit 1;\
      }\
    }
	cd ..
}
isDalvik ()
{
  type dalvikvm &>/dev/null
  return $?
}
isJVM ()
{
  type java &>/dev/null
  return $?
}
runDalvik()
{
  if [ -e $proj.dex ] 
    then
    setUp
    echo "Main class(es): $main"
    echo
    echo "$main" | while read -r a; do 
      dalvikvm -cp $proj.dex $a;
      echo
    done
    tearDown;
    exit 0;
  else
    echo $proj.dex does not exist. Run build or buildall.
    exit 1
  fi
}
runJVM()
{
  if [ -e $proj.jar ]
    then
      setUp
      echo Main class: $main
    echo "$main" | while read -r a; do 
      java -cp $proj.jar $a;
    done
      tearDown;
      exit 0;
    else
      echo $proj.jar does not exist. Run build and buildall.
    exit 1
  fi
}


proj=$1
if [ -z $proj ]
  then
    usage
fi
main=$2
if [ -z $main ]
then
  main=$(cat $proj/.main) || \
    { echo "Error reading $proj.main";usage; }
fi
echo $proj
isDalvik
dalvik=$?
if [ $dalvik -eq 0 ]
  then
    runDalvik
fi

isJVM
jvm=$?
if [ $jvm -eq 0 ]
  then
    runJVM
fi

usage
