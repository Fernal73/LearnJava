<?xml version="1.0"?>
<project name="Antlr"
         default="main"
         basedir=".">
  <property file="build.properties" />
  <property file="../globalbuild.properties" />
  <property file="${cs.properties}" />
  <property file="${gformat.properties}" />
  <property file="../pmd.properties" />
  <property file="../spotbugs.properties" />
  <!-- Sets variables which can later be used. -->
  <!-- The value of a property is accessed via ${} -->
  <property name="src.dir"
            location="." />
  <property name="build.dir"
            location="." />
  <property name="dist.dir"
            location="dist" />
  <property name="docs.dir"
            location="docs" />
  <loadfile property="cs.cp"
            srcFile="../${cs.classpath.file}" />
  <loadfile property="pmd.cp"
            srcFile="../${pmd.classpath.file}" />
  <loadfile property="spotbugs.cp"
            srcfile="../${spotbugs.classpath.file}" />
  <loadfile property="spotbugs-plugins.cp"
            srcfile="../${spotbugs-plugin.classpath.file}" />
  <loadfile property="compilerclasspath"
            srcFile="${compile.cp}" />
  <loadfile property="runclasspath"
            srcFile="${run.cp}" />
  <taskdef resource="${cs.taskdef.resource}"
           classpath="${cs.cp}" />
  <taskdef name="pmd"
           classname="net.sourceforge.pmd.ant.PMDTask"
           classpath="${pmd.cp}" />
  <taskdef resource="edu/umd/cs/findbugs/anttask/tasks.properties"
           classpath="${spotbugs.cp}:${spotbugs-plugins.cp}" />
  <!-- Deletes the existing build, docs and dist directory-->
  <target name="clean">
    <delete>
      <fileset dir="."
               includes="**/*.class" />
    </delete>
    <delete dir="${docs.dir}" />
    <delete dir="${dist.dir}" />
  </target>
  <!-- Creates the  build, docs and dist directory-->
  <target name="makedir">
    <mkdir dir="${docs.dir}" />
    <mkdir dir="${dist.dir}" />
  </target>
  <!-- Compiles the java code (including the usage of library for JUnit -->
  <target name="compile"
          depends="clean, makedir,format,checkstyle">
    <javac includeantruntime="false"
           srcdir="${src.dir}"
           destdir="${build.dir}"
           classpath="${compilerclasspath}">
      <compilerarg value="${javac.params}" />
      <compilerarg value="${javac.params1}" />
    </javac>
  </target>
  <!-- Creates Javadoc -->
  <target name="docs"
          depends="compile">
    <javadoc packagenames="${packages}"
             sourcepath="${src.dir}"
             destdir="${docs.dir}"
             additionalparam="${javadoc.params}"
             classpath="${compilerclasspath}"></javadoc>
  </target>
  <target name="manifest">
    <tstamp />
    <exec executable="bash"
          outputproperty="build">
      <arg value="-c" />
      <arg value="git log --pretty=format:'%h' | head -1" />
    </exec>
    <manifest mode="update"
              file="${jar.manifest}">
      <attribute name="Built-By"
                 value="${user.name}" />
      <section name="common">
        <attribute name="Specification-Title"
                   value="${ant.project.name}" />
        <attribute name="Specification-Version"
                   value="${version}" />
        <attribute name="Specification-Vendor"
                   value="" />
        <attribute name="Implementation-Title"
                   value="" />
        <attribute name="Implementation-Version"
                   value="${build} ${TODAY}" />
        <attribute name="Implementation-Vendor"
                   value="" />
      </section>
      <attribute name="Main-Class"
                 value="${main.class}" />
    </manifest>
  </target>
  <!--Creates the deployable jar file  -->
  <target name="jar"
          depends="compile,manifest">
    <jar destfile="${dist.dir}\${ant.project.name}-${version}.jar"
         basedir="${build.dir}"
         includes="**/*.class"
         manifest="${jar.manifest}"></jar>
  </target>
  <target name="setupclasspath">
    <description>Run target</description>
    <exec executable="bash">
      <arg value="./setupclasspath" />
    </exec>
  </target>
  <target name="run16a">
    <description>Numbers Data a target</description>
    <java classname="${main.class16}"
          input="numbers1.data">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run16">
    <description>Nuumbers Data target</description>
    <java classname="${main.class16}"
          input="numbers.data">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run15">
    <description>JSON Data target</description>
    <java classname="${main.class15}"
          input="example.json">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run14">
    <description>XMLV2 DisplayParseTree target</description>
    <java classname="${main.class14}"
          input="t.xml">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run13">
    <description>XMLV2 target</description>
    <java classname="${main.class13}"
          input="t.xml">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run12">
    <description>XMLLexer target</description>
    <java classname="${main.class12}"
          input="t.xml">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run11">
    <description>Data target</description>
    <java classname="${main.class11}"
          input="t.data">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run10.1">
    <description>Col target</description>
    <java classname="${main.class10}"
          input="t.rows">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg value="1" />
    </java>
  </target>
  <target name="run10.2">
    <description>Col target</description>
    <java classname="${main.class10}"
          input="t.rows">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg value="2" />
    </java>
  </target>
  <target name="run10.3">
    <description>Col target</description>
    <java classname="${main.class10}"
          input="t.rows">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg value="3" />
    </java>
  </target>
  <target name="run9a">
    <description>InsertSerialID target</description>
    <java classname="${main.class9a}">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg file="java6/Demo.java" />
    </java>
  </target>
  <target name="run9">
    <description>ExtractInterfaceTool target</description>
    <java classname="${main.class9}">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg file="java6/Demo.java" />
    </java>
  </target>
  <target name="run8">
    <description>LabeledClearExpr Calc target</description>
    <java classname="${main.class8}">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg file="tclear.expr" />
    </java>
  </target>
  <target name="run7clear">
    <description>LabeledExpr Calc target</description>
    <java classname="${main.class7}">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg file="tclear.expr" />
    </java>
  </target>
  <target name="run7">
    <description>LabeledExpr Calc target</description>
    <java classname="${main.class7}">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg file="t.expr" />
    </java>
  </target>
  <target name="run6">
    <description>LibExpr target</description>
    <java classname="${main.class6}">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg file="t.expr" />
    </java>
  </target>
  <target name="run5">
    <description>Calc target</description>
    <java classname="${main.class5}">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
      <arg file="t.expr" />
    </java>
  </target>
  <target name="run4embedded">
    <description>ArrayInit Translate target</description>
    <java classname="${main.class4}"
          input="arraytest.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run4">
    <description>ArrayInit Translate target</description>
    <java classname="${main.class4}"
          input="arraytestint.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run3err">
    <description>ArrayInit target</description>
    <java classname="${main.class3}"
          input="arraytesterr.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run3">
    <description>ArrayInit target</description>
    <java classname="${main.class3}"
          input="arraytest.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run2err">
    <description>Exprv2Test target</description>
    <java classname="${main.class2}"
          input="exprtesterr.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run2test">
    <description>Exprv2Test target</description>
    <java classname="${main.class2}"
          input="exprtest.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run2">
    <description>Exprv2Test target</description>
    <java classname="${main.class2}"
          input="exprv2test.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run1err">
    <description>ExprTest target</description>
    <java classname="${main.class1}"
          input="exprtesterr.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run1">
    <description>ExprTest target</description>
    <java classname="${main.class1}"
          input="exprtest.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="run"
          depends="run16a,run16,run15,run14,run13,run12,run11,run10.1,run10.2,run10.3,run9a,run9,run8,run7clear,run7,run6,run5,run4embedded,run4,run3err,run3,run2err,run2test,run2,run1err,run1">

    <description>TeeTest target</description>
    <java classname="${main.class}"
          input="test.txt">
      <classpath>
        <pathelement location="${dist.dir}\${ant.project.name}-${version}.jar" />
        <pathelement path="${java.class.path}" />
        <pathelement path="${runclasspath}" />
      </classpath>
    </java>
  </target>
  <target name="format">
    <fileset dir="${basedir}"
             id="javasrcs">
      <include name="**/*.java" />
      <exclude name="**/*Parser.java" />
      <exclude name="**/*Lexer.java" />
      <exclude name="**/*Listener.java" />
      <exclude name="**/*Visitor.java" />
    </fileset>
    <pathconvert property="sources"
                 refid="javasrcs"
                 pathsep=" " />
    <loadfile property="gformat.cp"
              srcFile="../${gformat.classpath.file}" />
    <java classname="${gformat.main.class}">
      <arg line="-i ${sources}" />
      <classpath>
        <pathelement path="${gformat.cp}" />
        <pathelement path="${java.class.path}" />
      </classpath>
    </java>
    <exec executable="sudo">
      <arg line="clang-format -style=file -i -sort-includes ${sources}" />
    </exec>
    <exec executable="bash">
      <arg line="../xformatall ${basedir}" />
    </exec>
  </target>
  <target name="checkstyleg">
    <fileset dir="${basedir}"
             id="javasrcs">
      <include name="**/*.java" />
      <exclude name="**/*Parser.java" />
      <exclude name="**/*Lexer.java" />
      <exclude name="**/*Listener.java" />
      <exclude name="**/*Visitor.java" />
    </fileset>
    <pathconvert property="sources"
                 refid="javasrcs"
                 pathsep=" " />
    <loadfile property="cs.cp"
              srcFile="../${cs.classpath.file}" />
    <java classname="${cs.main.class}"
          logError="true">
      <arg line="-c ../${cs.config} -p ${cs.properties} -o ${ant.project.name}-xpath.xml -g ${sources}" />
      <classpath>
        <pathelement path="${cs.cp}" />
        <pathelement path="${java.class.path}" />
      </classpath>
    </java>
  </target>
  <target name="checkstyle">
    <first id="checkstylefile">
      <fileset dir=".."
               includes="${cs.config}" />
    </first>
    <checkstyle config="${toString:checkstylefile}"
                failOnViolation="false"
                properties="${cs.properties}">
      <fileset dir="${basedir}"
               id="javasrcs">
        <include name="**/*.java" />
        <exclude name="**/*Parser.java" />
        <exclude name="**/*Lexer.java" />
        <exclude name="**/*Listener.java" />
        <exclude name="**/*Visitor.java" />
      </fileset>
      <formatter type="plain" />
      <formatter type="plain"
                 toFile="${cs.output}" />
      <classpath>
        <pathelement path="${cs.cp}" />
        <pathelement path="${java.class.path}" />
      </classpath>
    </checkstyle>
  </target>
  <target name="pmd">
    <property name="pmd.errCount"
              value="0" />
    <pmd cacheLocation="${pmd.cacheFile}"
         minimumPriority="${pmd.minimumPriority}"
         suppressMarker="${pmd.suppressMarker}"
         failuresPropertyName="pmd.errCount">
      <ruleset>../${pmd.config}</ruleset>
      <auxclasspath>
        <pathelement path="${basedir}" />
      </auxclasspath>
      <formatter type="${pmd.reportFormat}"
                 toFile="${pmd.output}"
                 toConsole="${pmd.toConsole}"></formatter>
      <fileset dir="${basedir}"
               id="javasrcs">
        <include name="**/*.java" />
        <exclude name="**/*Parser.java" />
        <exclude name="**/*Lexer.java" />
        <exclude name="**/*Listener.java" />
        <exclude name="**/*Visitor.java" />
      </fileset>
    </pmd>
    <echo message="${pmd.errCount} violations found." />
  </target>
  <target name="spotbugs">
    <spotbugs output="text"
              outputFile="${spotbugs.output}"
              reportLevel="low"
              effort="max"
              excludeFilter="${spotbugs.suppressions.xml}"
              nested="true">
      <auxClasspath path="${basedir}" />
      <auxClasspath path="${runclasspath}" />
      <sourcePath path="${basedir}" />
      <class location="${basedir}" />
      <classpath>
        <pathelement path="${spotbugs.cp}" />
        <pathelement path="${java.class.path}" />
      </classpath>
    </spotbugs>
  </target>
  <target name="main"
          depends="compile,pmd,spotbugs, jar, docs">
    <description>Main target</description>
  </target>
</project>
