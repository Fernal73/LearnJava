#! /usr/bin/env bash

#######################################################################
#@author: Linus Fernandes(linusfernandes @gmail.com)
# @file: buildecj
## @created: Friday Jun 03, 2019 21: 20: 25 IST
# @copyright: Copyright(c) Linus Fernandes
## @description: 
######################################################################
usage() {
  echo "usage:  $0 dir"
    echo "dir - Project directory, must exist"
    exit 1
}

isJVM () {
  type jar &>/dev/null
  return $?
}

createJar() {
  cd "$proj" || echo "cannot cd to $proj";
  jarFile="$proj-$version.jar"
  if [ ! -e "$manifestFile" ] 
    then
      echo "$manifestFile does not exist. Run ant manifest in $proj."
      exit 1
    fi
    readarray -t args < <(find . -name "*.class" \
      ! -path "**/git/**" -type f)
    jar cfm "$jarFile $manifestFile" \
    "${args[@]}" || { \
    echo "Error creating jar output: $jarFile";
        exit 1;
      }
    jarRes=$? 
    [ -e "$jarFile" ] && cp "$jarFile" .. \
    && mkdir -p "$distDir" && mv "$jarFile" "$distDir" || { \
    echo "Error moving jar file to $proj/$distDir"; 
  }
  cd ..
  exit 0
}

readVersion() {
  [ -e "$versionFile" ] && { \
    version=$(cat "$versionFile") || \
    echo "Unable to read $versionFile";
  }
}

readOptions()
{
  [ -e "$proj/$optionsFile" ] && \
      { options=$(cat "$proj/$optionsFile") || \
      echo "Unable to read $proj/$optionsFile";}
}

proj=$1
ver="1.7"
version="0.0.0"
declare -r distDir="dist"
declare -r manifestFile="manifest.mf"
declare -r verFile=".ver"
declare -r versionFile=".version"
declare -r optionsFile=".options"
declare -i success
declare -i jarRes
options=""

isJVM
jvm=$?
jarRes=0

if [ -z "$proj" ] || [ ! -d "$proj" ]
then
  usage
else
  echo "$proj"
  [ -e "$proj/$verFile" ] && { \
    ver=$(cat "$proj/$verFile") || \
    echo "Unable to read $proj/$verFile";
  }
  readOptions
  ecj $options -"$ver" -cp "$proj" "$proj"
  success=$?
  if [ $success -eq 0 ]
  then
  readVersion
    if [ $jvm -eq 0 ]
    then
      createJar
    else
      echo "Unable to create executable archive"
      success=1
    fi
  fi
fi
exit $((success+jarRes))
