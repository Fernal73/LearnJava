#!/usr/bin/env bash
java -cp . networking.DaytimeServer &
echo "Sleeping for 5 seconds again after DaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 1313"
java -cp . networking.DayTimeClient localhost 1313
java -cp . networking.TimeServer &
echo "Sleeping for 5 seconds again after TimeServer start..."
sleep 5
echo "Running Time to port 3737"
java -cp . networking.Time localhost 3737
java -cp . networking.MultithreadedDaytimeServer &
echo "Sleeping for 5 seconds again after MultithreadedDaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 1331"
java -cp . networking.DayTimeClient localhost 1331
java -cp . networking.PooledDaytimeServer &
echo "Sleeping for 5 seconds again after PooledDaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 3131"
java -cp . networking.DayTimeClient localhost 3131
echo "Running EchoServer to port 7777"
java -cp . networking.EchoServer 7777 &
echo "Sleeping for 5 seconds again after EchoServer start..."
sleep 5
echo "Running EchoClient to port 7777"
java -cp . networking.EchoClient localhost 7777 < echo.txt
java -cp . networking.RandomPort &
echo "Sleeping for 5 seconds again after RandomPort server start..."
sleep 5
java -Djava.util.logging.config.file=logging.properties -cp . networking.LoggingDaytimeServer 4141 &
echo "Sleeping for 5 seconds again after LoggingDaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 4141"
java -cp . networking.DayTimeClient localhost 4141
java -Djava.util.logging.config.file=logging.properties -cp . networking.SingleFileHttpServer web.log 8080 &
echo "Sleeping for 5 seconds again after SingleFileHttpServer start..."
sleep 5
echo "Running curl to port 8080"
curl --url http://localhost:8080
java -Djava.util.logging.config.file=logging.properties -cp . networking.Redirector http://www.maketimeforsports.com/ 8081 &
echo "Sleeping for 5 seconds again after Redirector start..."
sleep 5
echo "Running curl to port 8081"
curl --url http://localhost:8081
java -Djava.util.logging.config.file=logging.properties -cp . networking.JHttp . 8082 &
echo "Sleeping for 5 seconds again after JHttp start..."
sleep 5
echo "Running curl to port 8082"
curl --url http://localhost:8082/web.log
echo "Running curl head request to port 8082"
curl -v -I http://localhost:8082/web.log
echo "Running wget head request to port 8082"
wget -S --spider http://localhost:8082/web.log
java -cp . networking.SecureOrderTaker &
echo "Sleeping for 5 seconds again after SecureOrderTaker start..."
sleep 5
echo "Running SecureOrderPlacer to port 7000"
java -cp . networking.SecureOrderPlacer
java -Djavax.net.ssl.keyStore=serverkeystore.jks \
  -Djavax.net.ssl.keyStorePassword=password \
  -Djavax.net.ssl.trustStore=servertruststore.jks \
  -Djavax.net.ssl.trustStorePassword=password \
  -cp . networking.MainClass &
echo "Sleeping for 5 seconds again after MainClass start..."
sleep 5
echo "Running SocketClientDemo to port 5432"
java -Djavax.net.ssl.keyStore=clientkeystore.jks \
	-Djavax.net.ssl.keyStorePassword=password \
	-Djavax.net.ssl.trustStore=clienttruststore.jks \
	-Djavax.net.ssl.trustStorePassword=password \
	-cp . networking.SocketClientDemo
java -cp . networking.ServerEcho 7007 &
echo "Sleeping for 5 seconds again after ServerEcho start..."
sleep 5
java -cp . networking.ClientEcho 7007 < echo.txt
java -cp . networking.ChargenServer 1991 &
echo "Sleeping for 5 seconds again after ChargenServer start..."
sleep 5
java -cp . networking.ChargenClient 1991
